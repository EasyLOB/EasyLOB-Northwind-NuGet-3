@model TaskViewModel

@{
    string CSHTML = "CleanLocalStorage.cshtml";
    string pageTitle = Model.Task;
    string documentTitle = AppHelper.DocumentTitle(pageTitle);
}

<h4>@pageTitle</h4>

<div id="Form" style="display: none;">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        @Html.ValidationSummary(false, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.Controller)
        @Html.HiddenFor(model => model.Action)
        @Html.HiddenFor(model => model.Task)

        <div class="z-formButtons">
            @Html.ZImage("Button_OK", "btn z-buttonOk", PresentationResources.OK, "onClick()")
        </div>
    }
</div>

<script>
    $(function () {
        try {
            var model = @Html.Raw(JsonConvert.SerializeObject(Model));

            $(document).prop("title", "@Html.Raw(documentTitle)");
            zShowOperationResult(model.OperationResult);

            $("#Form").show();
        } catch (exception) {
            zAlert(zExceptionMessage("@CSHTML", "function", exception));
        }
    });

    function onClick() {

        //localStorage.clear();

        for(var i = localStorage.length - 1; i >= 0; i--) {
            var key = localStorage.key(i);
            if (key.startsWith("$ej$")) {
                //var value = localStorage[key];
                localStorage.removeItem(key);
            }
        }

        zAlert("<label class=\"label label-success\">@(String.Format(ErrorResources.Successful, EasyLOBPresentationResources.TaskCleanLocalStorage))</label>");
    }
</script>
